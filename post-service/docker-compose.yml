version: "3"

networks:
  ph-test:
    external: true

services:
  post-service:
    container_name: ph_post_service_api
    build:
      dockerfile: Dockerfile
      context: .
    volumes:
      - .:/usr/src/app
    depends_on:
      - traefik
      - kafka
      - kafka-ui
      - postdb
    env_file:
      - .env
    command: npm run start:dev
    ports:
      - 3000:3000
    networks:
      - ph-test
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.post-service-https.service=post-service"
      - "traefik.http.routers.post-service.middlewares=auth-middleware"
      - "traefik.http.routers.post-service.rule=Host(`ph.local`) && PathPrefix(`/post`)"

  traefik:
    image: traefik
    container_name: ph_traefik
    restart: unless-stopped
    ports:
        - 80:80
        - 443:443
    # network_mode: host
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik:/etc/traefik/
    networks:
      - ph-test
    labels:
      - "traefik.http.middlewares.auth-middleware-trust.forwardauth.trustForwardHeader=true"
      - "traefik.http.middlewares.auth-middleware.forwardauth.address=http://auth-service:3003/auth/verif"
      - "traefik.http.middlewares.auth-middleware.forwardauth.authRequestHeaders=Authorization"
      - "traefik.http.middlewares.auth-middleware.forwardauth.authResponseHeaders=X-Auth-User,Authorization"

  comment-db:
    image: mongo
    container_name: ph_comment-db
    ports:
      - 27018:27017
    volumes:
      - ~/apps/commentdb/mongo:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=test
      - MONGO_INITDB_ROOT_PASSWORD=test123
      - MONGO_INITDB_DATABASE=development=testdb
    networks:
      - ph-test

  kafka:
      image: 'bitnami/kafka:3.3.1'
      container_name: ph_kafka
      environment:
        - KAFKA_ENABLE_KRAFT=yes
        - KAFKA_CFG_PROCESS_ROLES=broker,controller
        - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
        - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
        - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
        - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
        - KAFKA_CFG_BROKER_ID=1
        - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
        - ALLOW_PLAINTEXT_LISTENER=yes
        - KAFKA_KRAFT_CLUSTER_ID=r4zt_wrqTRuT7W2NJsB_GA
      volumes:
        - kafka-volume:/bitnami/kafka
      networks:
        - ph-test

  kafka-ui:
    container_name: ph_kafka-ui
    image: 'provectuslabs/kafka-ui:latest'
    ports:
      - "8085:8080"
    environment:
      - KAFKA_CLUSTERS_0_BOOTSTRAP_SERVERS=kafka:9092
      - KAFKA_CLUSTERS_0_NAME=r4zt_wrqTRuT7W2NJsB_GA
    networks:
      - ph-test

  postdb:
    image: mongo
    container_name: ph_postdb
    ports:
      - 27017:27017
    volumes:
      - ~/apps/postdb/mongo:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=test
      - MONGO_INITDB_ROOT_PASSWORD=test123
      - MONGO_INITDB_DATABASE=development=testdb
    networks:
      - ph-test

  authdb:
    image: mongo
    container_name: ph_authdb
    ports:
      - 27019:27017
    volumes:
      - ~/apps/authdb/mongo:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=test
      - MONGO_INITDB_ROOT_PASSWORD=test123
      - MONGO_INITDB_DATABASE=development=testdb
    networks:
      - ph-test


volumes:
  kafka-volume: {}
